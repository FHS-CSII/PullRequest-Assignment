/**
 * @author Ari Weiss
 */
package weiss_ari;

import java.util.LinkedList;
import java.lang.Math;

public class Exercises
{
	static int threeAndFive()
	{
		int sum = 0;
		
		for(int i = 0; i < 1000; i++)
		{
			if(i % 3 == 0)
				sum += i;
			else if(i % 5 == 0)
				sum += i;
		}
		
		return sum;
	}
	
	static int evenFibSum()
	{
		int returnVal = 0;
		int num1 = 0, num2 = 0, num3 = 0;
		double sqrt5 = 0.0;
		LinkedList<Integer> fib = new LinkedList<Integer>();
		for(int i = 0, n = 1; i < 4000000; n++)
		{
			sqrt5 = Math.sqrt(5);
			num1 = (int) Math.pow((1 + sqrt5), n);
			num2 = (int) Math.pow((1 - sqrt5), n);
			num3 = (int) Math.pow(2, n);
			i = ((int) num1 - (int) num2) / ((int) num3 * (int) sqrt5);
			if(n >= 7)
				i -= n - 7;
				
			System.out.println(i);
			if(i % 2 == 0)
				fib.add(new Integer(i));
		}
		
		for(int i = 0; i < fib.size(); i++)
		{
			returnVal += fib.get(i);
		}
		return returnVal;
	}
	
}
