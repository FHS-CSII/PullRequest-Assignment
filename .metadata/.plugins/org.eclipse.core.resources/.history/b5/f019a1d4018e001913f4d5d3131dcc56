/**
 * @author Ari Weiss
 */
package weiss_ari;

import java.util.LinkedList;
import java.lang.Math;

public class Exercises
{
	static int threeAndFive()
	{
		int sum = 0;
		
		for(int i = 0; i < 1000; i++)
		{
			if(i % 3 == 0)
				sum += i;
			else if(i % 5 == 0)
				sum += i;
		}
		
		return sum;
	}
	
	static int evenFibSum()
	{
		int returnVal = 0;
		LinkedList<Integer> fib = new LinkedList<Integer>();
		for(int i = 0, x = 1; i < 4000000; x++)
		{
			i = (((int) (Math.pow((1 + Math.sqrt(5)), x))) - ((int) (Math.pow((1 - Math.sqrt(5)), x))))/(((int) Math.pow(2, x)) * ((int) Math.sqrt(x)));
			if(i % 2 == 0)
				fib.add(i);
		}
		
		for(int i = 0; i < fib.size(); i++)
		{
			returnVal += fib.get(i);
		}
		return returnVal;
	}
	
	
	public static void main(String[] args)
	{
		System.out.println(evenFibSum());
	}
	
}
