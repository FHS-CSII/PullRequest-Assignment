package Prakash_Tarun;

import java.math.BigInteger;

/**
 * @author Tarun Prakash //include this tag in your classes with your name
 * 
 * Assignment Instructions:
 * 	- Right click on the src folder and create a new package.
 * 	- Name the package "lastName_firstName", replacing lastName with your last name and firstName with your first name.
 * 	- Inside that package, create a new class "Exercises".
 *    - YOU SHOULD ONLY BE MAKING CHANGES IN THIS PACKAGE
 * 	- Create a javadoc comment at the top with the '@author' tag with your name next to it (do this for all classes you create)
 * 	- Create the following static methods:
 * 		- int threeAndFive() : Returns the sum of all the multiples of 3 or 5 below 1000
 * 		- int evenFibSum() : Returns the sum of the even-valued terms less than 4 million in the Fibonacci Sequence
 * 		- int largestPrimeFactor() : Returns the largest prime factor of the number 600851475143
 * 	- Create a separate Driver class and test your program by outputting the answers to your static methods
 *
 * Submission Instructions:
 *  - Save your saved work on Eclipse - your workspace should be the file location of the cloned repo
 *  - In GitHub Desktop, add your summary and commit your changes
 *  - Then push your commits to GitHub
 *  - Go to your repo on GitHub.com
 *  - Click "New pull request"
 *  - Click "Create pull request"
 *  - In the summary for your request, put your first and last name
 *  - Send the request
 * 
 * 
 */

public class Exercises {
	public static int threeAndFive(){
		int sum = 0;
		for (int i = 0; i < 1000; i++){
			if (i % 3 == 0 || i % 5 == 0){
				sum += i;
			}
		}
		return sum;
	}
	
	public static int evenFibSum(){ 
		int sum = 0;
		int last = 1, last2 = 0;
		int counter = 0;
		while ((last < 10 && last % 2 == 0) || last != 1){
			//counter += 1;

			sum += last + last2;
			int temp = last2;
			last2 = last;
			last = last + temp;
			counter += 1;
		}
		return sum;
	}
	
	
	public static long largestPrimeFactor(){
	    long maxPrime = -1; 
	    long n = 600851475143L;
	    
	    while (n % 2 == 0) { 
	        maxPrime = 2; 
	          
	        // equivalent to n /= 2 
	        n >>= 1;  
	    } 
	  

	    for (int i = 3; i <= Math.sqrt(n); i += 2) { 
	        while (n % i == 0) { 
	            maxPrime = i; 
	            n = n / i; 
	        } 
	    } 
	  
	    if (n > 2) 
	        maxPrime = n; 
	  
	    return maxPrime; 
	}
	
	
	public static void main(String[] args){
		System.out.println(evenFibSum());
	}
	
}
